generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  supabaseId String    @unique
  email      String    @unique
  firstName  String
  lastName   String
  role       Role
  students   Student[]
  admins     Admin[]
  masters    Master[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Department {
  id       String    @id @default(uuid())
  name     String
  faculty  String
  students Student[]
  programs Program[]
  Admin    Admin[]
}

model Program {
  id           String     @id @default(uuid())
  name         String
  departmentId String
  department   Department @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  students     Student[]
  admins       Admin[]
}

model Student {
  id                 String      @id @default(uuid())
  userId             String      @unique
  user               User        @relation(fields: [userId], references: [supabaseId], onDelete: Cascade)
  departmentId       String?
  department         Department? @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  programId          String?
  program            Program?    @relation(fields: [programId], references: [id], onDelete: Cascade)
  currentSemester    Int?
  currentYear        Int?
  registrationNumber String?     @unique
  dateOfBirth        DateTime?
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
}

model Admin {
  id           String      @id @default(uuid())
  userId       String      @unique
  user         User        @relation(fields: [userId], references: [supabaseId], onDelete: Cascade)
  departmentId String?
  department   Department? @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  programId    String?
  program      Program?    @relation(fields: [programId], references: [id], onDelete: Cascade)
  position     String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Master {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [supabaseId], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  STUDENT
  ADMIN
  MASTER
}
